#+title: GO 踩坑指南
#+date: [2020-01-12 15:53]

* 包
GO 中通过 =package= 的形式来管理包，包由文件夹的形式组成。在同一个包中，同一文件
夹下，文件中作用域互通。

注意一点，如果需要在其他包中调用另一个包中的变量或者函数，则这个函数或者变量
必须是 =exported= ， *即需要变量的第一个名字大写*

GO 文件中，第一个声明必须为 =package name= ，而对于可执行的文件必须使用 =package
main= .

GO 支持一个简单的测试文件，测试文件必须是 =xxx_test.go= 结尾.

* 高效GO
1. GO 中 if, switch, for 都不需要括号.
2. 注释使用 // 行注释，/* xxx */ 块注释.
3. godoc 将回用声明函数上面的注释作为文档输出.
4. 每一个可导出的变量或者函数都应该使用在起上面添加一个注释。文档每一个最好是一
   个完整的句子。
5. GO 中允许使用()声明多个变量.
6. 包中变量是否可用于外面的函数，取决于函数的第一个名字是否大写。
7. 与其他语言类似，当导入一个包时，这个包名成为了包中所有内容的访问器。所以这个包
  名必须需要简洁、易懂。包名最好为一个简单的单词，不用下划线，不用大写。
8. 通过路径导入包时，将仅仅取最后一个作为实际的包。
9. 长的名字不会使得程序更具有可读性，一份好的说明文档更具有价值.
10. 在if的条件表达式中使用初始化语句的情况很常见。
11. 短声明语句一定要确保其中一个变量是没有被申明的。
12. 一个for循环，三种用法，带分号的，带条件，什么都不带的。
13. 遍历对象可以使用 =range= 支持同时返回多个值，像 =Python= 中的 =for index,
    value in enumerate(list)=
14. =switch= 中判断条件处于 =case= 子句上。使用 =,= 分割多个条件，不用加 =break=
    结束. 但也可以像其他语言中使用，将条件子句放在 =switch= 后面。
15. GO 中支持直接跳出多层循环，在 =break= 后面添加一个标签。
16. 可以将函数返回值命名，当函数执行过程中，如果触发 =return= 不带任何实参，将按
    照现有的值，将结果放回。如下面的例子中，默认返回 =result= 这样很方便。
    #+begin_src go
      func add(x int, y int) (result int) {
              result = x + y
              return
      }
    #+end_src
    一旦该函数开始执行，结果参数将会被初始化。
17. defer 语句可将一个函数推迟执行，类似于钩子或者回调，推迟函数将会在执行函数即将结果之前执
    行。但推迟函数包含的实参将在预设推迟的时候求值，而不是最后才求值。
18. GO 中可以返回局部变量的地址。
19. GO 中将数组视为值，将数组传入函数中，将是一个副本而不是一个指针。
20.
